{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ynion\\\\Documents\\\\SnipcartNext\\\\components\\\\Contact.tsx\";\nexport default function Contact() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"contact__title\",\n      children: [\"Any questions? \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"colored\",\n        children: \"Contact us.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"contact__paragraph\",\n      children: \"We're looking forward to hearing from you. Feel free to contact us if you have any questions!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://snipcart.com/contact-feedback\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Contact;\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\nvar _c2;\n\n$RefreshReg$(_c2, \"Contact\");","map":{"version":3,"sources":["C:/Users/ynion/Documents/SnipcartNext/components/Contact.tsx"],"names":["Contact"],"mappings":";;AAEA,eAAe,SAAA,OAAA,GAAmB;AAChC,SAAA,aACE,OAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,SAAA;AAAA,IAAA,QAAA,EAAA,CAAA,aACE,OAAA,CAAA,IAAA,EAAA;AAAI,MAAA,SAAS,EAAb,gBAAA;AAAA,MAAA,QAAA,EAAA,CAAA,iBAAA,EAAA,aAA8C,OAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAf,SAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,CAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EAA9C,IAA8C,CAA9C;AAAA,KAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,CAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EADF,IACE,CADF,EAAA,aAEE,OAAA,CAAA,GAAA,EAAA;AAAG,MAAA,SAAS,EAAZ,oBAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,CAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EAFF,IAEE,CAFF,EAAA,aAGE,OAAA,CAAA,GAAA,EAAA;AAAG,MAAA,IAAI,EAAP,uCAAA;AAAA,MAAA,QAAA,EAAA,aACE,OAAA,CAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,CAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EAAA,IAAA;AADF,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,CAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EAHF,IAGE,CAHF;AAAA,GAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;AAAA,IAAA,QAAA,EAAA,YAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAAA,EADF,IACE,CADF;AASD;MAVc,O;KAASA,O","sourcesContent":["\r\n\r\nexport default function Contact() {\r\n  return (\r\n    <div className=\"contact\">\r\n      <h2 className=\"contact__title\">Any questions? <span className=\"colored\">Contact us.</span></h2>\r\n      <p className=\"contact__paragraph\">We're looking forward to hearing from you. Feel free to contact us if you have any questions!</p>\r\n      <a href=\"https://snipcart.com/contact-feedback\">\r\n        <button>Contact Us</button>\r\n      </a>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}